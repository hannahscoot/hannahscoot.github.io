function getRandomInt(r,n){return Math.floor(Math.random()*(n-r+1))+r}function randomexcursion(r){for(var n=[0],t=r,e=r;t>0||e>0;)getRandomInt(0,(e+t)*(e-t+1)-1)<(e+1)*(e-t)?e--:t--,n.push(e-t);return n}function excursionToMatching(r){for(var n=[],t=[],e=0;e<r.length-1;e++)r[e+1]>r[e]?n.push(e):(t[e]=n.pop(),t[t[e]]=e);return t}function matchingPairs(r){for(var n=[],t=0;t<r.length;t++)r[t]>t&&n.push([t,r[t]]);return n}function toTorusMatching(r){for(var n={},t=0;t<3;){var e=getRandomInt(0,r.length+1);(e=e>=r.length?r[0]:Math.min(e,r[e]))in n||(n[e]=!0,t++)}var o=[];for(e in n)o.push(parseInt(e));for(var a=[],f=0;f<r.length;f++)f<=o[0]||f>o[2]?a.push(f):f<=o[1]?a.push(f+o[2]-o[1]):a.push(f-o[1]+o[0]);var u=[];for(f=0;f<r.length;f++)u[a[f]]=a[r[f]];return u}function getRandomMatching(r){return excursionToMatching(randomexcursion(r))}function getRandomTorusMatching(r){return toTorusMatching(getRandomMatching(r))}function getGenerators(r){for(var n=0;n<r.length-1;n++)if(r[n]>n)for(var t=n+1;t<r[n];t++)if(r[t]>r[n])return[[n,r[n]],[t,r[t]]]}function makeArrayOf(r,n){var t,e;for(t=new Array(n),e=0;e<n;++e)t[e]=r;return t}function shuffle(r){for(var n,t,e=r.length;e;n=Math.floor(Math.random()*e),t=r[--e],r[e]=r[n],r[n]=t);return r}function getMatchVertices(r){for(var n=0,t=makeArrayOf(-1,r.length),e=0;e<r.length;e++)if(-1===t[e]){t[e]=n,n++;for(var o=r[(e+r.length-1)%r.length];-1===t[o];)t[o]=t[e],o=r[(o+r.length-1)%r.length]}return t}function copyArray(r){for(var n=r.slice(0),t=n.length;t--;)n[t]instanceof Array&&(n[t]=copyArray(n[t]));return n}function getRandomIncreasingSequence(r,n,t){for(var e=shuffle(makeArrayOf(!1,t).concat(makeArrayOf(!0,n-r))),o=[],a=0,f=0;f<e.length;f++)e[f]?a++:o.push(a);return o}function getRandomInterleave(r,n){for(var t=shuffle(makeArrayOf(!1,r).concat(makeArrayOf(!0,n))),e=[[],[]],o=[0,0],a=0;a<t.length;a++)t[a]?(o[0]++,e[1].push(o[1])):(o[1]++,e[0].push(o[0]));return e}function getRandomCircularInterleave(r,n){var t=getRandomInterleave(r,n);return[t[0].map(function(r){return r%n}),t[1].map(function(n){return n%r})]}function getEdges(r,n){for(var t=[getMatchVertices(r[0]),getMatchVertices(r[1])],e=[[],[]],o=0;o<2;o++)for(var a=0;a<r[o].length;a++)e[o].push([[[a,t[o][a]],[(a+1)%t[o].length,t[o][(a+1)%t[o].length]]],[[n[o][a],t[1-o][n[o][a]]],[n[o][r[o][a]],t[1-o][n[o][r[o][a]]]]]]);return e}function getVertToEdgeMap(r){for(var n=[[],[]],t=0;t<2;t++)for(var e=0;e<r[t].length;e++)for(var o=0;o<2;o++)r[t][e][0][o][1]in n[t]?n[t][r[t][e][0][o][1]].push([t,e,o]):n[t][r[t][e][0][o][1]]=[[t,e,o]],r[t][e][1][o][1]in n[1-t]?n[1-t][r[t][e][1][o][1]].push([t,e,o]):n[1-t][r[t][e][1][o][1]]=[[t,e,o]];return n}function getClosedForm(r,n,t){var e=new Array(2);e[0]=makeArrayOf(0,r.length),e[1]=[];for(var o=0;o<n.length;o++){var a=t[0]<o&&o<t[1],f=t[0]<n[o]&&n[o]<t[1];e[1][o]=a?f?0:1:f?-1:0}return e}function diffuseForm(r,n,t,e){function o(r){return 1-2*r}null==e&&(e=1e5);for(var a=100,f=0;a>t&&f<e;){a=0;for(var u=0;u<n[0].length;u++){var i=0;n[0][u].forEach(function(n){i+=o(n[2])*r[n[0]][n[1]]});var h=i/n[0][u].length;n[0][u].forEach(function(n){r[n[0]][n[1]]-=o(n[2])*h}),a+=Math.abs(i)}f++}return a<=t}function innerproduct(r,n){for(var t=0,e=0;e<2;e++)for(var o=0;o<r[e].length;o++)t+=r[e][o]*n[e][o];return t}function normalize(r){for(var n=1/Math.sqrt(innerproduct(r,r)),t=0;t<2;t++)for(var e=0;e<r[t].length;e++)r[t][e]*=n}function orthonormalize(r,n){normalize(r);for(var t=innerproduct(r,n),e=0;e<2;e++)for(var o=0;o<n[e].length;o++)n[e][o]-=t*r[e][o];normalize(n)}function getLineCoor(r){for(var n=[[[],[]],[[],[]]],t=0;t<2;t++)for(var e=0;e<2;e++)for(var o=0,a=0;a<r[t][e].length;a++)n[t][e][a]=o,o+=r[t][e][a];return n}function getSquares(r,n,t){for(var e=getLineCoor(r),o=[],a=0;a<2;a++)for(var f=0;f<n[a].length;f++)t[a][f]<=f||(0==a?o.push({top:[e[0][0][f],e[1][0][f]],left:[e[0][1][n[a][f][1][0][0]],e[1][1][n[a][f][1][0][0]]],width:[r[0][0][f],r[1][0][f]],order:f,side:0}):o.push({top:[e[0][0][n[a][f][1][0][0]],e[1][0][n[a][f][1][0][0]]],left:[e[0][1][f],e[1][1][f]],width:[r[0][1][f],r[1][1][f]],order:f,side:1}));return o}function getTotal(r){for(var n=[0,0],t=0;t<2;t++)r[t].forEach(function(r){n[t]+=r});return n}function getPeriods(r,n,t){for(var e=[],o=0,a=0;a<r[0].length;a++)e[r[0][a][0][0][1]]=o,o+=n[0][a];var f=[[],[]];for(a=0;a<2;a++){f[a][0]=n[1][t[a][0]]+e[r[1][t[a][0]][1][0][1]]-e[r[1][t[a][0]][1][1][1]],f[a][1]=0;for(var u=t[a][0]+1;u<t[a][1];u++)f[a][1]-=n[1][u]}return f}function matrixVectorProduct(r,n){for(var t=[],e=0;e<r.length;e++){t[e]=0;for(var o=0;o<r[e].length;o++)t[e]+=r[e][o]*n[o]}return t}function getIntegerPointsInPolygon(r){var n=1e4,t=-1e4;r.forEach(function(r){r[0]<n&&(n=r[0]),r[0]>t&&(t=r[0])});for(var e=[],o=Math.ceil(n);o<t;o++){for(var a=1e4,f=-1e4,u=0;u<r.length;u++){var i=(u+1)%r.length;if(r[u][0]<o&&r[i][0]>o||r[u][0]>o&&r[i][0]<o)(h=r[u][1]+(o-r[u][0])*(r[i][1]-r[u][1])/(r[i][0]-r[u][0]))<a&&(a=h),h>f&&(f=h)}for(var h=Math.ceil(a);h<f;h++)e.push([o,h])}return e}